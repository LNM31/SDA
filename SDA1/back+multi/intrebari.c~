#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define N 6
typedef struct{
  char proba[201];
  int valoare;
  int actualizare;
}scor;

scor v[N]={
  {"P1",1,1},
  {"P2",2,0},
  {"P3",3,0},
  {"P4",4,1},
  {"P5",5,0},
  {"P6",6,1},
};
void swap(scor *e1,scor *e2)
{
  scor tmp;
  tmp=*e1;
  *e1=*e2;
  *e2=tmp;
}
void afisare(scor *v,int size)
{
  for(int i=0;i<size;i++)
    {
      printf("%s %d %d\n",v[i].proba,v[i].valoare,v[i].actualizare);
    }
  printf("\n");
}
void f2(scor v[],int size)
{
  int st=0,dr=size-1;
  while(st<dr)
    {
      while(v[st].actualizare==1)
	st++;
      while(v[dr].actualizare==0)
	dr--;
      if(st<dr)
	swap(&v[st],&v[dr]);
      st++;
      dr--;
    }
}
void selection_sort1(scor a[], int n)
{
	int i, j, min; // min retine INDEXUL elementului cu valoare minima
	for (i = 0; i < n - 1; i=i+2)
	{
		min = i;
		for (j = i + 1; j < n; j=j+2)
		{
			if (a[j].valoare > a[min].valoare)
				min = j;
		}
		swap(&a[min], &a[i]);
	}
}
void selection_sort2(scor a[], int n)
{
	int i, j, min; // min retine INDEXUL elementului cu valoare minima
	for (i = 1; i < n - 1; i=i+2)
	{
		min = i;
		for (j = i + 1; j < n; j=j+2)
		{
			if (a[j].valoare < a[min].valoare)
				min = j;
		}
		swap(&a[min], &a[i]);
	}
}
void f1(scor v[],int size)
{
  selection_sort1(v,size);
  selection_sort2(v,size);
}
void meniu(int i)
{
  if(i==0)
    {
      afisare(v,N);
      f2(v,N);
      afisare(v,N);

    }
  else
    {
      afisare(v,N);
      f1(v,N);
      afisare(v,N);
    }
}
void selection_sort3(scor a[], int n)
{
	int i, j, min; // min retine INDEXUL elementului cu valoare minima
	int aux=0;
	for (i = 1; i < n - 1; i=i+2)
	{
		min = i;
		for (j = i + 1; j < n; j=j+2)
		{
		  if(aux==0)
		    {
		      if (a[j].valoare > a[min].valoare)
				min = j;
		      aux=1;
		    }
		  else if(aux==1)
		    {
		      if (a[j].valoare < a[min].valoare)
				min = j;
		      aux=0;
		    }
		}
		swap(&a[min], &a[i]);
	}
}
// functia f2 functioneaza astfel incat avem doua capete,st si dreapta,st urca pana gaseste un elem fals,dr scada
//gaseste un el adev,dupa le interschimba,avand O(1)
//functia selection_sort3 face schimbarea ,este eficienta pentru un numar mic de elemente
int main()
{
  afisare(v,N);
  selection_sort3(v,N);
  afisare(v,N);
  //printf("Hello world!\n");
  // afisare(v,N);
  f2(v,N);
  afisare(v,N);
  //f1(v,N);
  
  return 0;
}
